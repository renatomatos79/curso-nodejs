// ir para o diretorio de instalacao do mongodb usando o DOS
cd C:\Program Files\MongoDB\Server\4.2\bin	
	
// iniciar a aplicacao cliente
mongo.exe

// selecione o database
use aula

1. criar os seguintes pedidos
db.orders.insertMany([
	{ _id: 1, cust_id: "abc1", ord_date: ISODate("2012-11-02T17:04:11.102Z"), status: "A", amount: 50, price: 5.25 },
	{ _id: 2, cust_id: "xyz1", ord_date: ISODate("2013-10-01T17:04:11.102Z"), status: "A", amount: 100, price: 6.47 },
	{ _id: 3, cust_id: "xyz1", ord_date: ISODate("2013-10-12T17:04:11.102Z"), status: "D", amount: 25, price: 4.00 },
	{ _id: 4, cust_id: "xyz1", ord_date: ISODate("2013-10-11T17:04:11.102Z"), status: "D", amount: 125, price: 2.10 },
	{ _id: 5, cust_id: "abc1", ord_date: ISODate("2013-11-12T17:04:11.102Z"), status: "A", amount: 25, price: 3.00 }
]);

2. filtrar e agregar os valores

db.orders.aggregate(
   [
     { 
		$match : { status : "A" } 
	 },
     {
       $group:
         {
           _id: "$cust_id",
		   sumAmount: { $sum: "$amount" }, 
		   minAmount: { $min: "$amount" }, 
		   maxAmount: { $max: "$amount" }, 
           avgAmount: { $avg: "$amount" },
		   total: { $sum: { $multiply: ["$amount", "$price"] } },
		   records: { $sum: 1 }
         }
     }
   ]
)
				   
3. cursor

var myCursor = db.orders.find( { cust_id: "abc1" } );
while (myCursor.hasNext()) {
   print(tojson(myCursor.next()));
}

4. criando scripts
veja o script print.js


============ lista de operadores para serem usados com aggregate
https://docs.mongodb.com/manual/reference/operator/aggregation/avg/

============ types
https://docs.mongodb.com/manual/reference/bson-types/
